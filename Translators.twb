<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0213.2333                               -->
<workbook original-version='18.1' source-build='2019.1.0 (20191.19.0213.2333)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='20'>
        <calculation class='tableau' formula='20' />
        <range granularity='1' max='100' min='1' />
      </column>
    </datasource>
    <datasource caption='Population+ (Lista_tp)' inline='true' name='federated.0eyakcf1q8altw176syvh1x5d1z6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Translators_list' name='excel-direct.1wwc41e08jscrm1b5ada21fks58n'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/admin/Documents/Nauka/Tableau/tłumacze_przysięgli/Translators_list.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Translators].[Language]' />
              <expression op='[Rates].[Language]' />
            </expression>
          </clause>
          <relation join='full' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Population].[City]' />
                <expression op='[Translators].[City]' />
              </expression>
            </clause>
            <relation connection='excel-direct.1wwc41e08jscrm1b5ada21fks58n' name='Population' table='[Population$]' type='table'>
              <columns gridOrigin='A1:C931:no:A1:C931:0' header='yes' lost='0' outcome='6' processed='930'>
                <column datatype='string' name='Voivodeship' ordinal='0' />
                <column datatype='string' name='City' ordinal='1' />
                <column datatype='integer' name='Population' ordinal='2' />
              </columns>
            </relation>
            <relation connection='excel-direct.1wwc41e08jscrm1b5ada21fks58n' name='Translators' table='[Translators$]' type='table'>
              <columns gridOrigin='A1:H10848:no:A1:H10848:0' header='yes' lost='0' outcome='2' processed='21694'>
                <column datatype='integer' name='Id' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Language' ordinal='2' />
                <column datatype='string' name='Citizenship' ordinal='3' />
                <column datatype='string' name='Country' ordinal='4' />
                <column datatype='string' name='Voivodeship' ordinal='5' />
                <column datatype='string' name='City' ordinal='6' />
                <column datatype='datetime' date-parse-format='yyyy' name='Year' ordinal='7' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1wwc41e08jscrm1b5ada21fks58n' name='Rates' table='[Rates$]' type='table'>
            <columns gridOrigin='A1:C53:no:A1:C53:0' header='yes' lost='0' outcome='6' processed='104'>
              <column datatype='string' name='Language' ordinal='0' />
              <column datatype='integer' name='Group' ordinal='1' />
              <column datatype='real' name='Rate' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Citizenship]' value='[Translators].[Citizenship]' />
          <map key='[City (Translators)]' value='[Translators].[City]' />
          <map key='[City]' value='[Population].[City]' />
          <map key='[Country]' value='[Translators].[Country]' />
          <map key='[Group]' value='[Rates].[Group]' />
          <map key='[Id]' value='[Translators].[Id]' />
          <map key='[Language (Rates)]' value='[Rates].[Language]' />
          <map key='[Language]' value='[Translators].[Language]' />
          <map key='[Name]' value='[Translators].[Name]' />
          <map key='[Population]' value='[Population].[Population]' />
          <map key='[Rate]' value='[Rates].[Rate]' />
          <map key='[Voivodeship (Translators)]' value='[Translators].[Voivodeship]' />
          <map key='[Voivodeship]' value='[Population].[Voivodeship]' />
          <map key='[Year]' value='[Translators].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Voivodeship</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Voivodeship]</local-name>
            <parent-name>[Population]</parent-name>
            <remote-alias>Voivodeship</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Population]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Population]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Population]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C931:no:A1:C931:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Translators]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H10848:no:A1:H10848:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Id]</local-name>
            <parent-name>[Translators]</parent-name>
            <remote-alias>Id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[Translators]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Language</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Language]</local-name>
            <parent-name>[Translators]</parent-name>
            <remote-alias>Language</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Citizenship</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Citizenship]</local-name>
            <parent-name>[Translators]</parent-name>
            <remote-alias>Citizenship</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Translators]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Voivodeship</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Voivodeship (Translators)]</local-name>
            <parent-name>[Translators]</parent-name>
            <remote-alias>Voivodeship</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City (Translators)]</local-name>
            <parent-name>[Translators]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Translators]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>10</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Language</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Language (Rates)]</local-name>
            <parent-name>[Rates]</parent-name>
            <remote-alias>Language</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Group]</local-name>
            <parent-name>[Rates]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rate]</local-name>
            <parent-name>[Rates]</parent-name>
            <remote-alias>Rate</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Rates]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C53:no:A1:C53:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='City size' datatype='string' name='[Calculation_715227954017333248]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Population] &gt; 250000 THEN &apos;Large city &gt; 250k&apos; &#13;&#10;ELSEIF [Population] &gt; 50000 AND [Population] &lt;= 250000 THEN &apos;Middle-size city 50k-250k&apos;&#13;&#10;ELSE &apos;Small city &lt;50k&apos; END' />
      </column>
      <column caption='Group index' datatype='real' name='[Calculation_715227954054918145]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Group] = 1 THEN 23.00/23.00 &#13;&#10;ELSEIF [Group] = 2 THEN 24.77/23.00 &#13;&#10;ELSEIF [Group] = 3 THEN 30.07/23.00 &#13;&#10;ELSEIF [Group] = 4 THEN 33.61/23.00 END' />
      </column>
      <column caption='Language count' datatype='integer' name='[Calculation_770115574287822848]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='count([Language])' />
      </column>
      <column caption='Population distinct' datatype='integer' name='[Calculation_770115574287953921]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( {FIXED [City] : MIN([Population])} )' />
      </column>
      <column caption='Translator distinct' datatype='integer' name='[Calculation_770115574288113666]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Name])' />
      </column>
      <column caption='Population per Translators' datatype='real' name='[Calculation_770115574288203779]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_770115574288113666]/[Calculation_770115574287953921] * 1000' />
      </column>
      <column caption='Translators abroad' datatype='string' name='[Calculation_770115574288359428]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Country] = &apos;Poland&apos; THEN &apos;Poland&apos; &#13;&#10;ELSEIF [Country] != &apos;Poland&apos; THEN &apos;Abroad&apos; &#13;&#10;ELSE NULL END' />
      </column>
      <column caption='Main cities' datatype='string' name='[Calculation_770115574288498693]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [City (Translators)] &#13;&#10;WHEN &apos;Warszawa&apos; THEN &apos;Warszawa&apos; &#13;&#10;WHEN &apos;Kraków&apos; THEN &apos;Kraków&apos;&#13;&#10;WHEN &apos;Łódź&apos; THEN &apos;Łódź&apos;&#13;&#10;WHEN &apos;Wrocław&apos; THEN &apos;Wrocław&apos;&#13;&#10;WHEN &apos;Poznań&apos; THEN &apos;Poznań&apos;&#13;&#10;WHEN &apos;Gdańsk&apos; THEN &apos;Gdańsk&apos;&#13;&#10;WHEN &apos;Szczecin&apos; THEN &apos;Szczecin&apos;&#13;&#10;WHEN &apos;Bydgoszcz&apos; THEN &apos;Bydgoszcz&apos;&#13;&#10;WHEN &apos;Lublin&apos; THEN &apos;Lublin&apos;&#13;&#10;WHEN &apos;Białystok&apos; THEN &apos;Białystok&apos;&#13;&#10;WHEN &apos;Katowice&apos; THEN &apos;Katowice&apos;&#13;&#10;ELSE &apos;Other cities&apos; END' />
      </column>
      <column caption='Multiple languages' datatype='string' name='[Calculation_770115574297329672]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF { FIXED [Name] : SUM([Number of Records]) } &gt; 4 Then &quot;Five&quot; &#13;&#10;ELSEIF { FIXED [Name] : SUM([Number of Records]) } = 4 Then &quot;Four&quot;&#13;&#10;ELSEIF { FIXED [Name] : SUM([Number of Records]) } = 3 Then &quot;Three&quot;&#13;&#10;ELSEIF { FIXED [Name] : SUM([Number of Records]) } = 2 Then &quot;Two&quot;&#13;&#10;Else &quot;One&quot; END' />
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_770115574302244874]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='Index()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[City (Translators)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Group]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Population per Translators (index)' datatype='real' name='[Population per Translators (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_770115574288113666]/[Calculation_770115574287953921] * &#13;&#10;AVG([Calculation_715227954054918145]) * 1000)' />
      </column>
      <column datatype='string' name='[Voivodeship]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Calculation_770115574297329672]' derivation='None' name='[none:Calculation_770115574297329672:nk]' pivot='key' type='nominal' />
      <column-instance column='[Group]' derivation='None' name='[none:Group:ok]' pivot='key' type='ordinal' />
      <drill-paths>
        <drill-path name='Country, City' />
        <drill-path name='Voivodeship, City'>
          <field>[Voivodeship]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.583929' measure-ordering='alphabetic' measure-percentage='0.375' parameter-percentage='0.0410714' rowDisplayCount='20000' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_770115574297329672:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;One&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Five&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Four&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Three&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Two&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Group:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>%null%</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#edc948'>
              <bucket>%all%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Poland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Four and more languages per year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Population+ (Lista_tp)' name='federated.0eyakcf1q8altw176syvh1x5d1z6' />
          </datasources>
          <datasource-dependencies datasource='federated.0eyakcf1q8altw176syvh1x5d1z6'>
            <column caption='Language count' datatype='integer' name='[Calculation_770115574287822848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([Language])' />
            </column>
            <column caption='Multiple languages' datatype='string' name='[Calculation_770115574297329672]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF { FIXED [Name] : SUM([Number of Records]) } &gt; 4 Then &quot;Five&quot; &#13;&#10;ELSEIF { FIXED [Name] : SUM([Number of Records]) } = 4 Then &quot;Four&quot;&#13;&#10;ELSEIF { FIXED [Name] : SUM([Number of Records]) } = 3 Then &quot;Three&quot;&#13;&#10;ELSEIF { FIXED [Name] : SUM([Number of Records]) } = 2 Then &quot;Two&quot;&#13;&#10;Else &quot;One&quot; END' />
            </column>
            <column caption='Index' datatype='integer' name='[Calculation_770115574302244874]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='Index()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Language]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='datetime' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_770115574297329672]' derivation='None' name='[none:Calculation_770115574297329672:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_770115574287822848]' derivation='User' name='[usr:Calculation_770115574287822848:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_770115574302244874]' derivation='User' name='[usr:Calculation_770115574302244874:ok:2]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Calculation_770115574297329672:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_770115574297329672:nk]' member='&quot;Five&quot;' />
              <groupfilter function='member' level='[none:Calculation_770115574297329672:nk]' member='&quot;Four&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Achler Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Adamczyk Joanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Adamczyk Mariusz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Adamowska Anna Agata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Albin Marek&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Amborska Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ambrożak Renata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Andrukiewicz Julia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Antoniak Sylwia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Antoszewicz-Wojtaszek Danuta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Awais Wasim&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Babińska Dorota&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Badyńska Beata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bagiński Marek&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bajerska Regina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Banaś Jan&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Baran-Kalinowska Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Baranowska Dorota&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Barcewicz Antoni Ryszard&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bartczak Waldemar&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bączyk-Otocka Alicja&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bąk Maria&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bąk Włodzimierz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bednarczuk-Kravić Łucja&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bendkowski Jacek&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bereza Dorota Karolina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Berezowska Karolina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Besz Józef&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Beszterda Ingeborga&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Białczyk Włodzimierz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bielecka Ewa Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bielicka Irena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bielkiewicz Bohdan&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bielska Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Biernacka Agata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bijas Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bilińska Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Biniarz Radosław&quot;' />
              <groupfilter from='&quot;Biwojno Konstanty&quot;' function='range' level='[none:Name:nk]' to='&quot;Blażević Bożidar&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Blida Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bluszcz Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Błazińska Helena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bogacz-Sokół Grażyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Boglarski Piotr&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bogucka-Eisler Alina Hanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bogusz Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bondaruk-Augustyńczyk Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Borkowska Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Borowska Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Borówka Anna Zofia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Borys Iwona&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Borzemski Andrzej&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Borzycki Bolesław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Branach-Kallas Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Brandmiller-Witowska Lidia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Braun Sławomir&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Brodzikowska Agnieszka&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bryndel Bożena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Brzezińska Magdalena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Brzostowiecka Hanna Irena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Brzozowska Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Brzozowska Kazimiera&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Buchta Ludmiła&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Buć Stanisława&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Budniak Danuta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bukato Wiktor Cezary&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bukowska Bożena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bukowski Artur Jan&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Burny Kazimierz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Byner Joanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Byrski Stanisław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cabos Olga Janina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Caputa Czesław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chlebica Władysław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chmiel Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chmura Leszek&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chodera Beata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chodkiewicz Urszula&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chojnacka Agnieszka&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cholewa Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cholewicz-Schmidt Barbara&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chomczuk Jan&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chrobak Marzena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chwastek Agnieszka Magdalena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chwistek Łukasz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ciągwa Józef&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cieszkowska-Gałan Beata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ciuksza-Buczek Beata Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cmoch Bartosz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cynk Grzegorz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Czaban Władysław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Czajkowski Piotr&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Czaplewski Jan&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Czapliński Tomasz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Czarnecka Edyta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Czerska Jadwiga&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Czerwińska Iwona&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Czownicki Jacek&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Czumaj Jolanta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Czystowska-Radomska Irena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Czyż Zdzisława Jolanta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ćirlić Elżbieta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ćwiek Teresa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Daciuk Eugeniusz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dąbrowska Jadwiga&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dąbrowski Julian&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dąbrowski Waldemar&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Denysiuk Maria&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Deręgowska Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Długosz Cezary&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Długosz Rafał&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dmowska-Zielińska Hanna Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dobrowolski Jerzy&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dolecka Zofia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dołęcka Aleksandra&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Domański Jerzy&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dominik Barbara&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Domżoł Jerzy&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Doszla Aneta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Drewniak Natalia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Drzewiecka Agnieszka&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dubrowska Joanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Duda Bogusław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Duda Natalia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dudzik Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Durlow Wangiel&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dusik Adam&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dutkowska Bogusława&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dwojak-Bokun Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dybiec - Gajer Joanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dymarek Rita&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dyras Magdalena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dyrda Agnieszka&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dziekoński Jan&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dziemian Robert&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dzierżawska-Bukowska Urszula&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dziewońska Dorota&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dzióbek Mihaela Dorina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dzwonkowska Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Engel Roman&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Erdmann Wacław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Faleński Waldemar&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Fedoruk Irena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ferdyn Kateryna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Filipek Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Finc-Gratkowska Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Fleks Adam&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Flor-Górecka Agnieszka&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Formella Wanda&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Frank - Błachno Anita&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gacek Kazimiera&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gajewski Mirosław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gałoński Józef&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gałuszka Piotr&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gancarz Krystyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gąsior Mariusz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gilewski Wojciech&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gilowska Agnieszka&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gizińska Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Glogier-Osińska Blanka&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gładysz Marzanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gniewowska Grażyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Goedhart Jolanta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gojun Elżbieta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gondek Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Goraj-Kasprzyk Marta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gościcka Elżbieta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Góral-Bernaś Ilona&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Górecka-Ciechacka Agnieszka&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Górniak Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Górnicka Maria&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Górnisiewicz-Niżnik Alicja&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Górska Beata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Grabarczuk Galina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Grzegrzółka Bożena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Grześkowiak Beata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Grzębowska Regina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Grzybowska-Gazda Grażyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gumola Piotr&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gut Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gwizdalska-Mentel Joanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hack Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hadryan Milena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Heblewska-Telega Justyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Herman-Baster Jolanta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hess Estera&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Heyduk Jędrzej Józef&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hlibowicka-Węglarz Barbara nauk hum&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hoher Ewa Monika&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hryckiewicz Irena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hurski Eugeniusz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Idzik Eugeniusz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Imioło Iwona&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Iskierka Lidia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Iwanowska Bożena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Iwańczuk Mikołaj&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Iwaszkiewicz Olga&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jabłońska-Wróblewicz Maria Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jagiełło Violetta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jakimiuk Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Janczak Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Janiszewska Natalia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jankowska Żanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jankowski Józef Wiktor&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Janosz Adam&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Janus Maria&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Janus Urszula&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Janusz Joanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jarczak Danuta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jarecki Krzysztof&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jasińska Rozalia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jastrzębska Elżbieta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jawor Dariusz Grzegorz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jawoszek-Goździk Agata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jeczeń Jerzy&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jerzyniak Barbara&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jeziorska Maria&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jóźwiak-Kotynia Marzanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jurkiewicz Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kacperczyk Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kacprzak Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kaczmarczyk Agnieszka Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kaczmarek Agnieszka&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kaczmarek Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kais-Badrici Jolanta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kaleta-Kuzińska Magdalena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kallas Urszula Dorota&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kamińska Marta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kamiński Adam Jarosław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kaniewska Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kanik Janusz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kańczuga Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kapica Wanda&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Karczewski Roman&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Karolak Ireneusz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Karpow Stanisław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kasolik Marta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kasperek Krystyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kasprzycka Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kasprzyk Anna&quot;' />
              <groupfilter from='&quot;Kasprzyk Krzysztof&quot;' function='range' level='[none:Name:nk]' to='&quot;Kasprzykowska Jolanta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kaszuba Wojciech&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kawałczewska Magdalena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kaznowski Sławomir&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kaźmierczak Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kempa Anna Jadwiga&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kędzierska Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kielan-Antończak Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kirchdorfer-Murczkiewicz Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kisiel Andrzej&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kitliński Andrzej&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Klein Kalina Magdalena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Klein Włodzimierz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Klimek Zuzanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Klimkowski Tomasz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kluczyńska Monika&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kłeczek Monika&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kmiecicka Magdalena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kniażewska Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Koc Adela&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Koch Donka&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kochański Eugeniusz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Koczyk Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kokodyńska-Królikowska Aldona&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kolasa Jolanta Maria&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kolbus Elżbieta Janina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kolesnikow Gleb&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kołodziej Tadeusz Jerzy&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Komar Bogusława&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Komarek Brunon&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Komorowska Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Komorowska Joanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Komorowska Magdalena Maria&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Konecki Andrzej Jarosław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Konieczna Jadwiga&quot;' />
              <groupfilter from='&quot;Konior Wanda&quot;' function='range' level='[none:Name:nk]' to='&quot;Koniuszewska-Derlatka Halina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Konowska Agnieszka&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kopij Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Korbyla Robert&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Korcz Włodzimierz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kordas Grażyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Korzeniewska Irina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Korzyn Wacława&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kosińska Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kotkowska-Zając Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kotwicz Wanda&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kowalska Beata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kowalska-Szubert Agata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kowalski Andrzej&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kozłowska Hanna Zuzanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kozłowska Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Krajcarz Grażyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Krajcarz Mariusz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Krasnopolska-Maliszewska Lilia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kraśko-Abusaymah Anna&quot;' />
              <groupfilter from='&quot;Krawczyk Marta&quot;' function='range' level='[none:Name:nk]' to='&quot;Krawczyk Wojciech&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kreńska Justyna Dorota&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kroczek Przemysław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Król Wioletta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Królikowska-Hardek Marta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Krupka Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Krupowicz Wojciech&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Krysiewicz Urszula&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Krzysztoń Urszula&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kubanek Andrzej&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kubka Andrzej&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kuc Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kucharska Dorota&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kucharska Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kuczko Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kuhn Aleksandra Stefania&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kuipers Dorota&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kujawski Andrzej&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kukolenko Ałła&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kula Bożena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kula Zdzisław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kuraszewicz Radosław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kuroczycki Tadeusz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kutnik Augustyn&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kuźmienko Natalia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kuźnik Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kwiatkowska Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lach-Miller Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lachcik Bogusław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lauchaut-Multan Magdalena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Laudańska Maria&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lawrenz Łucja&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lebowska Galina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lenczewski Sławomir&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Leszczyński Konrad&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Leśniak Magdalena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Leśniewska Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lewaszkiewicz Łukasz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lewicka Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Liniewski Piotr&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lipowski Jaroslav&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lison Zuzanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Listwan-Rebuffa Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;López Sáez Lucyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lubicz-Trawkowska Halina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lubkiewicz Magdalena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lwowska Czesława&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Łakomska Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Łatuszyński Grzegorz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Łoik-Dudek Irena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Łojek Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Łomnicka-Rogal Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Łucewicz-Napałkow Maryja&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Łuczyńska Joanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Łukaszewicz Ewa Izabela&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Łukaszewicz Justyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Łusiak Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Łysenko Igor&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Maciąg Barbara&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Maciążek Magdalena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Maciejak Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Maczuga Władysław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Madej Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Madej Iwona&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Maj-Tkaczyńska Danuta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Majek-Wiśniowska Iwona&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Majewska Angelika&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Majewska Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Majka-Onyszkiewicz Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Majkowska-Kula Jolanta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Makowska Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Malik-Bochwic Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Malinowska Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Malinowska Magdalena Elżbieta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Maliszewska Izabela&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Maliszewski Julian&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Małczak Leszek&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mamajko Krystyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mandryka Wiesław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Manecka Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Manowska Karolina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Marańska-Napadło Elżbieta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Marczenko Olga&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Marczyk Jan&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Markiewicz Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Markovskyy Anatoliy&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Markowicz Natalia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Markowski-Wedelstett Robert&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Marks-Kraska Karolina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Martynowicz Sergiusz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Maslukiwska Natalia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Matejek Łucja&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Matras Andrzej&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Maziarz -Mrozik Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mazińska-Szumska Magdalena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mazur Joanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mazur Rafał&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mączka Agnieszka&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mądrawska Monika&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Meller Edward&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Meszka Hanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mialdun-Ekielska Anżela&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Michalik Aleksandra&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Michalska Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Michalska Zuzanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Michalska-Rajch Agnieszka&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Michałowska Anna Izabela&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mieczak Robert&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mielnik Izydor Stanisław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mierzejewska Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Migus Stefan&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mikołajczyk Dominik&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mikołajewska Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mikrut Leszek&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mikulska Aneta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mikulski Marek&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Miller Dorota&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Miłkow Weselin&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Minkowicz-Albert Natalia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Miodońska-Rączka Lilianna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Miodunka Renata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Misiaszek Leopold&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Misiewicz-Karkut Joanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mleczko Wiesława&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Molitoris Ludomir&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mołdowan Julia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Montusiewicz Patrycja&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mossakowska-Panek Beata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Musiał Magdalena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Muśko Jarosław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Napierała-Kawalec Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nejman Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nemś-Muniak Agnieszka&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nidae Alicja nauk hum&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Niechciał Agnieszka&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Niewulis Olgierd Antoni&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nikiciuk Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nikić Ewa Urszula&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nosal Sabina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nowak Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nowak Barbara&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nowak Beata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nowak Elżbieta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nowak Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nowak Leszek&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nowak-Bajcar Sylwia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nowakowska Maria&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Noworyta Alicja Barbara&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nowosad Bogdan&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nowożeniuk Ludmiła&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Obradović Agnieszka&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Obrębski Michał&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ocetek Zdzisław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Oczkowska Zofia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Odlanicka-Poczobutt Teresa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Odrobińska Ewa Danuta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Odzierejko Maria&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ogonowski Jerzy&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Olasik Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Olszewski Robert&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Olszewski Ryszard&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Opielińska-Bator Irena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ordon-Krzak Monika&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Orlińska Klaudia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Orłowska Lubow&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ornaf-Rusek Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Osiecka Maria Jadwiga&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ostrowska Dorota&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ostrowska Monika&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Owczarek Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pacer-Bik Elżbieta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pacholec Beata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Paciukanis Dorota&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pająk Hildegarda&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Paluszkiewicz Beata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pałczyńska Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pamuła Salomea&quot;' />
              <groupfilter from='&quot;Panasiuk Anna&quot;' function='range' level='[none:Name:nk]' to='&quot;Panasiuk Nadzieja&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Panaszek Krzysztof&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pankau Celina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Papis Bożenna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Parcińska Zofia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Partyka Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pasieka Jarosław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pawlak Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pawłowski Maciej&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pazda Ziemowit&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Perlikowska Anita&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Petit Alina Kinga&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Petrovic-Wilk Ana&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Petryczko Mirosław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pęcak Bogdana&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pędyczak Stefan&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pędzich Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pękala Beata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Piaścik Izabela Beata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Piątek Marta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Piątkowska Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Piątkowski Jacek&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Piech Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pieniążek-Marković Krystyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pieruta Robert&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pietrus Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pietrzak Jerzy&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pięta Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pijanowski Andrzej&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Piotrowska Elżbieta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Piotrowska Magdalena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Piotrowska Maria&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pirecki Michał&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Podgórski Stanisław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pokrzyk Wojciech&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Polak Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Polkowska-Trocińska Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Popiołek Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Popławska Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Porawska Joanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Porczyk Anna Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Porębska Barbara&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Postument Julian&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Posyłek Joanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pragłowska-Manojlović Barbara&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Preda Dorota&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Prochowicz Grażyna Michalina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Prochowicz Władysław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pruszkowski Ryszard&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pruś Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Przepiórkowska Danuta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Przezdzięk Konrad Kajetan&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Przęczek Grażyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Przybyszewska-Milik Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Przygoda Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ptak Regina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pudło Agata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pussak-Altmann Dorota&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pyciński Antoni&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pykacz Mirela&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pyśk Bernadeta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Raczkowska Benedykta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Raczkowska Magdalena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Radojičić Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rak Agnieszka&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rak Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Raseta-Kud Beata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rauchensteiner Luba&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rejak Bożena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Reliszka Piotr&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Restel Czesław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Robaszyńska Monika&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rolewska Natalia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Roliński Jerzy&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Romanek Alicja&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rosiński Ryszard&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rostropowicz Joanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Roszczenko Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rozalicz Jacek&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rozwadowska Justyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rudowska-Nowak Justyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rut-Sztarbałło Beata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rybczyńska Janina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rządkowska Alicja Wiesława&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rzemieniewska Elżbieta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rzeszotarska Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sadlik Tomasz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sadłoń Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Santorowski Zbigniew&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sarnowska Agnieszka&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sawicka Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sawiński Krzysztof&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Schienke Adam&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Schneider Maria&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Serafin-Rafka Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Serguć Maria&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Serkowska Hanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Seweryńska Justyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sibilska-Górska Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Siegień Bazyli&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sieklucka Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sieprawska Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sikora Justyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Siryk Ludmiła&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Skaczkowska Danuta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Skotarek Beata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Skóra Dorota Urszula&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Skuta Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Słomiańska Aleksandra&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Smit Anna Barbara&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Smoleń Alina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sobol Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Socha Bartłomiej&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sodo-Bednarczyk Beata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sokołowska Dorota&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sokołowska Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sokołowski Adolf&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Soldatenko Daryna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Stachoń Joanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Stachowiak Maciej&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Stańczyk Daria&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Starzak-Leszczenko Joanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Stawicka-Pirecka Barbara&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Stefani Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Stefaniak Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Stefanowicz Tadeusz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Stoińska-Kairska Iwona&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Stolarczyk Janusz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Stompel Malina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Stovrag Joanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Strzemżalska Rozalia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Stufka-Olczyk Jadwiga&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Styczyńska Alina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sujecka Regina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Suszcz-Szumeluk Krystyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Suwała Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szadkowski Andrzej Wojciech&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szczepanek Alina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szczepankowska I. Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szczerbak Jacek&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szcześniak Stefan&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szczurkowska Joanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szerszeń Paweł&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szostak Tatiana&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szostok-Pałka Danuta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sztepiuk Maria&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szubert Rafał&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szubina Olga&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szulc Jacek&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szulczewska Hanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szulczyk Przemysława&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szumska-Dolecka Monika&quot;' />
              <groupfilter from='&quot;Szwajkowska Elwira&quot;' function='range' level='[none:Name:nk]' to='&quot;Szwarc Jerzy&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szwochertowska Magdalena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szybko-Streit Alicja&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szymanek Stanisław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szymańska Beata Maria&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szymczak Jerzy&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szymczak-Rozlach Mariola&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szymczukiewicz Magdalena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szypryt Renata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Szypuła Jadwiga&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Śmidowski Bronisław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Światowska Teresa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Świątkiewicz Bożenna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Świdnicka Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Świgońska Renata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Świtała Teresa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tarkowska-Adi Teresa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tarnówka Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tchórz Lubomira&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Terefenko Emilia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Terszakowiec-Nowak Areta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Titow Helena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Titow Michał&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Todos-Burny Barbara&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tokarska Magdalena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Toma Martyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tomaszewska Agata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tomczyk Grażyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Toporek Monika&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Trawińska Jadwiga&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Trusz Irena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Turcu Dumitru&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Turecka Maria&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Turkiewicz Aneta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Turkiewicz Jolanta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tuszyński Łukasz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Twardawa Teodor&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Twerdochlib Irena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tyburczy Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Uhryński Henryk&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ungurian Łarisa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Urbańczyk-Piskorska Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Usydus-Zalewska Katarzyna Sylwia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Vuletić Renata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Vus Nataliya&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wachowiak Jerzy&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wacowska Swietłana Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Walczak Joanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Walczak Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Walczyk Teresa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Waluch De La Torre Edyta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Warchoł Joanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Warmbier Krystyna Emilia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Warno Paweł&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wasilewska Iwonna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wasylków Elżbieta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wcisło Gabriela&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wenit Milan&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Werbeniec Andrzej&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Werbeniec-Michalak Maja Bogumiła&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Werc Paweł&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wędrychowska Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wieciech Leszek&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wieczorek Barbara&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wieczorek-Nowak Teresa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wielgomas Mirosława&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wilczek Alfreda&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wilczyńska-Popielarz Renata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wilkoński Rafał&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wilska Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Winkler Jan&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wisłocka Zofia&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wiśniewska Aleksandra&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wita Danuta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Witowski Bogdan&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wituszyńska Irena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Włoczewska Maria&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Włodarczyk Marek&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Włodarczyk Teresa Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wojciechowska Joanna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wojciechowska Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wojciechowska Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wojciechowska Tatjana&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wojnarowska Maria Magdalena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wojtasik Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Worobiej Ireneusz&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wośko Teresa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Woźniak Agnieszka&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Woźniak Elżbieta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Woźniak Urszula&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wójcik Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wójcik Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wójcik Witold&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wójtowicz Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wójtowicz-Szymańska Jolanta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wrochna Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wróblewska Agnieszka&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wróblewska Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wrześniak Barbara&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wysocka Małgorzata&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wysocka-Rybicka Katarzyna Maria&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wysoczański Józef&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zaborowski Krzysztof&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zaleska Dorota&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Załuski Andrzej&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zamojska Liliana&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zarzycka Urszula&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zawodna Łarysa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zazoniuk Andrzej&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ząbkowska Danuta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zdybel-Al Heib Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zelwak Andrzej&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zeman Maria&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zendel Katarzyna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zgondek Maciej&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zielińska Janina&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zieliński Bogusław&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zieliński Jerzy Antoni&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zienkiewicz Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zięba Łucja&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zingler Norbert&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ziomek Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zormati Shir Ali&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zubrycka Elżbieta&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zygarowicz Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zygmunt Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zylbertal Agnieszka Ewa&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;zymała Piotr&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Żęgota Bożena&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Żmijewska Anna&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Żurawska Natalia&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Name:nk]' direction='DESC' using='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574287822848:qk]' />
          <slices>
            <column>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Calculation_770115574297329672:nk]</column>
            <column>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='total-label' data-class='total' field='[federated.0eyakcf1q8altw176syvh1x5d1z6].[tyr:Year:ok]' value='Total' />
            <format attr='width' field='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574302244874:ok:2]' value='44' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574287822848:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574302244874:ok:2] / [federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Name:nk])</rows>
        <cols>[federated.0eyakcf1q8altw176syvh1x5d1z6].[tyr:Year:ok]</cols>
      </table>
      <simple-id uuid='{8E060A57-8813-4075-B362-D84073BC3217}' />
    </worksheet>
    <worksheet name='Licenses granted per year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Population+ (Lista_tp)' name='federated.0eyakcf1q8altw176syvh1x5d1z6' />
          </datasources>
          <datasource-dependencies datasource='federated.0eyakcf1q8altw176syvh1x5d1z6'>
            <column caption='Translator distinct' datatype='integer' name='[Calculation_770115574288113666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Name])' />
            </column>
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_770115574288113666]' derivation='User' name='[usr:Calculation_770115574288113666:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[tyr:Year:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tyr:Year:ok]' />
              <groupfilter function='member' level='[tyr:Year:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0eyakcf1q8altw176syvh1x5d1z6].[tyr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574288113666:qk]</rows>
        <cols>[federated.0eyakcf1q8altw176syvh1x5d1z6].[tyr:Year:ok]</cols>
      </table>
      <simple-id uuid='{4B359597-ADE4-48F6-A72C-EF5B248E1DDF}' />
    </worksheet>
    <worksheet name='Licenses granted per year per group'>
      <table>
        <view>
          <datasources>
            <datasource caption='Population+ (Lista_tp)' name='federated.0eyakcf1q8altw176syvh1x5d1z6' />
          </datasources>
          <datasource-dependencies datasource='federated.0eyakcf1q8altw176syvh1x5d1z6'>
            <column caption='Translator distinct' datatype='integer' name='[Calculation_770115574288113666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Name])' />
            </column>
            <column datatype='integer' name='[Group]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Group]' derivation='None' name='[none:Group:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_770115574288113666]' derivation='User' name='[pcto:usr:Calculation_770115574288113666:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[tyr:Year:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tyr:Year:ok]' />
              <groupfilter function='member' level='[tyr:Year:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0eyakcf1q8altw176syvh1x5d1z6].[tyr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0eyakcf1q8altw176syvh1x5d1z6].[pcto:usr:Calculation_770115574288113666:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0eyakcf1q8altw176syvh1x5d1z6].[pcto:usr:Calculation_770115574288113666:qk]' num-steps='4' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[pcto:usr:Calculation_770115574288113666:qk]' />
              <text column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[pcto:usr:Calculation_770115574288113666:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Group:ok]</rows>
        <cols>[federated.0eyakcf1q8altw176syvh1x5d1z6].[tyr:Year:ok]</cols>
      </table>
      <simple-id uuid='{43B0F33C-313B-467B-AEBD-B155A443BA3C}' />
    </worksheet>
    <worksheet name='Number of translators per population (per mille)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Population+ (Lista_tp)' name='federated.0eyakcf1q8altw176syvh1x5d1z6' />
          </datasources>
          <datasource-dependencies datasource='federated.0eyakcf1q8altw176syvh1x5d1z6'>
            <column caption='Population distinct' datatype='integer' name='[Calculation_770115574287953921]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( {FIXED [City] : MIN([Population])} )' />
            </column>
            <column caption='Translator distinct' datatype='integer' name='[Calculation_770115574288113666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Name])' />
            </column>
            <column caption='Population per Translators' datatype='real' name='[Calculation_770115574288203779]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_770115574288113666]/[Calculation_770115574287953921] * 1000' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Voivodeship]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Voivodeship]' derivation='None' name='[none:Voivodeship:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_770115574288203779]' derivation='User' name='[usr:Calculation_770115574288203779:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Voivodeship:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Voivodeship:nk]' />
              <groupfilter function='member' level='[none:Voivodeship:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Voivodeship:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574288203779:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574288203779:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574288203779:qk]' num-steps='4' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574288203779:qk]' />
              <text column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574288203779:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Voivodeship:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{7DE5D796-DA46-45EF-AD20-5D48C7C8CC77}' />
    </worksheet>
    <worksheet name='Number of translators per population (per mille) (index)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Population+ (Lista_tp)' name='federated.0eyakcf1q8altw176syvh1x5d1z6' />
          </datasources>
          <datasource-dependencies datasource='federated.0eyakcf1q8altw176syvh1x5d1z6'>
            <column caption='Group index' datatype='real' name='[Calculation_715227954054918145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Group] = 1 THEN 23.00/23.00 &#13;&#10;ELSEIF [Group] = 2 THEN 24.77/23.00 &#13;&#10;ELSEIF [Group] = 3 THEN 30.07/23.00 &#13;&#10;ELSEIF [Group] = 4 THEN 33.61/23.00 END' />
            </column>
            <column caption='Population distinct' datatype='integer' name='[Calculation_770115574287953921]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( {FIXED [City] : MIN([Population])} )' />
            </column>
            <column caption='Translator distinct' datatype='integer' name='[Calculation_770115574288113666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Name])' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Group]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column caption='Population per Translators (index)' datatype='real' name='[Population per Translators (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_770115574288113666]/[Calculation_770115574287953921] * &#13;&#10;AVG([Calculation_715227954054918145]) * 1000)' />
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Voivodeship]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Voivodeship]' derivation='None' name='[none:Voivodeship:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population per Translators (copy)]' derivation='User' name='[usr:Population per Translators (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Voivodeship:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Voivodeship:nk]' />
              <groupfilter function='member' level='[none:Voivodeship:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Voivodeship:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Population per Translators (copy):qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Population per Translators (copy):qk]' num-steps='4' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Population per Translators (copy):qk]' />
              <text column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Population per Translators (copy):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Voivodeship:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{B3075EA9-8633-4F88-82AD-59E014A89363}' />
    </worksheet>
    <worksheet name='Top 20 languages in Poland'>
      <table>
        <view>
          <datasources>
            <datasource caption='Population+ (Lista_tp)' name='federated.0eyakcf1q8altw176syvh1x5d1z6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='20'>
              <calculation class='tableau' formula='20' />
              <range granularity='1' max='100' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0eyakcf1q8altw176syvh1x5d1z6'>
            <column caption='Language count' datatype='integer' name='[Calculation_770115574287822848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([Language])' />
            </column>
            <column caption='Translators abroad' datatype='string' name='[Calculation_770115574288359428]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Country] = &apos;Poland&apos; THEN &apos;Poland&apos; &#13;&#10;ELSEIF [Country] != &apos;Poland&apos; THEN &apos;Abroad&apos; &#13;&#10;ELSE NULL END' />
            </column>
            <column caption='Main cities' datatype='string' name='[Calculation_770115574288498693]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [City (Translators)] &#13;&#10;WHEN &apos;Warszawa&apos; THEN &apos;Warszawa&apos; &#13;&#10;WHEN &apos;Kraków&apos; THEN &apos;Kraków&apos;&#13;&#10;WHEN &apos;Łódź&apos; THEN &apos;Łódź&apos;&#13;&#10;WHEN &apos;Wrocław&apos; THEN &apos;Wrocław&apos;&#13;&#10;WHEN &apos;Poznań&apos; THEN &apos;Poznań&apos;&#13;&#10;WHEN &apos;Gdańsk&apos; THEN &apos;Gdańsk&apos;&#13;&#10;WHEN &apos;Szczecin&apos; THEN &apos;Szczecin&apos;&#13;&#10;WHEN &apos;Bydgoszcz&apos; THEN &apos;Bydgoszcz&apos;&#13;&#10;WHEN &apos;Lublin&apos; THEN &apos;Lublin&apos;&#13;&#10;WHEN &apos;Białystok&apos; THEN &apos;Białystok&apos;&#13;&#10;WHEN &apos;Katowice&apos; THEN &apos;Katowice&apos;&#13;&#10;ELSE &apos;Other cities&apos; END' />
            </column>
            <column datatype='string' name='[City (Translators)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Language]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_770115574288359428]' derivation='None' name='[none:Calculation_770115574288359428:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_770115574288498693]' derivation='None' name='[none:Calculation_770115574288498693:nk]' pivot='key' type='nominal' />
            <column-instance column='[Language]' derivation='None' name='[none:Language:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_770115574287822848]' derivation='User' name='[usr:Calculation_770115574287822848:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Calculation_770115574288359428:nk]'>
            <groupfilter function='member' level='[none:Calculation_770115574288359428:nk]' member='&quot;Poland&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Calculation_770115574288498693:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_770115574288498693:nk]' />
              <groupfilter function='member' level='[none:Calculation_770115574288498693:nk]' member='&quot;Other cities&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Calculation_770115574288498693:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Białystok&quot;</bucket>
              <bucket>&quot;Bydgoszcz&quot;</bucket>
              <bucket>&quot;Gdańsk&quot;</bucket>
              <bucket>&quot;Katowice&quot;</bucket>
              <bucket>&quot;Kraków&quot;</bucket>
              <bucket>&quot;Lublin&quot;</bucket>
              <bucket>&quot;Łódź&quot;</bucket>
              <bucket>&quot;Poznań&quot;</bucket>
              <bucket>&quot;Szczecin&quot;</bucket>
              <bucket>&quot;Warszawa&quot;</bucket>
              <bucket>&quot;Wrocław&quot;</bucket>
              <bucket>&quot;Other cities&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Language:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_770115574287822848]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Language:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Language:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574287822848:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Language:nk]</column>
            <column>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Calculation_770115574288359428:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='total-label' data-class='total' field='[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Calculation_770115574288498693:nk]' value='Poland' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574287822848:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Language:nk]</rows>
        <cols total='true'>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Calculation_770115574288498693:nk]</cols>
      </table>
      <simple-id uuid='{406D4FA5-DE3F-4F6B-AC5C-9D26512EAA00}' />
    </worksheet>
    <worksheet name='Translators abroad'>
      <table>
        <view>
          <datasources>
            <datasource caption='Population+ (Lista_tp)' name='federated.0eyakcf1q8altw176syvh1x5d1z6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0eyakcf1q8altw176syvh1x5d1z6'>
            <column caption='Translator distinct' datatype='integer' name='[Calculation_770115574288113666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Name])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_770115574288113666]' derivation='User' name='[usr:Calculation_770115574288113666:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Austria&quot;' function='range' level='[none:Country:nk]' to='&quot;Norway&quot;' />
              <groupfilter from='&quot;Russia&quot;' function='range' level='[none:Country:nk]' to='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574288113666:qk]' included-values='all' />
          <slices>
            <column>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Country:nk]</column>
            <column>[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574288113666:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0eyakcf1q8altw176syvh1x5d1z6].[Longitude (generated)]' field-type='quantitative' max='20300094.716048993' min='-25652382.871330231' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0eyakcf1q8altw176syvh1x5d1z6].[Latitude (generated)]' field-type='quantitative' max='18176593.611752421' min='-16211683.900679935' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574288113666:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Country:nk]' />
              <color column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574288113666:qk]' />
              <geometry column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eyakcf1q8altw176syvh1x5d1z6].[Latitude (generated)]</rows>
        <cols>[federated.0eyakcf1q8altw176syvh1x5d1z6].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{0F86E71C-88FE-473D-BEA0-52F3DE5C2A1D}' />
    </worksheet>
    <worksheet name='Translators and number of languages'>
      <table>
        <view>
          <datasources>
            <datasource caption='Population+ (Lista_tp)' name='federated.0eyakcf1q8altw176syvh1x5d1z6' />
          </datasources>
          <datasource-dependencies datasource='federated.0eyakcf1q8altw176syvh1x5d1z6'>
            <column caption='Translator distinct' datatype='integer' name='[Calculation_770115574288113666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Name])' />
            </column>
            <column caption='Multiple languages' datatype='string' name='[Calculation_770115574297329672]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF { FIXED [Name] : SUM([Number of Records]) } &gt; 4 Then &quot;Five&quot; &#13;&#10;ELSEIF { FIXED [Name] : SUM([Number of Records]) } = 4 Then &quot;Four&quot;&#13;&#10;ELSEIF { FIXED [Name] : SUM([Number of Records]) } = 3 Then &quot;Three&quot;&#13;&#10;ELSEIF { FIXED [Name] : SUM([Number of Records]) } = 2 Then &quot;Two&quot;&#13;&#10;Else &quot;One&quot; END' />
            </column>
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_770115574297329672]' derivation='None' name='[none:Calculation_770115574297329672:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_770115574288113666]' derivation='User' name='[usr:Calculation_770115574288113666:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Calculation_770115574297329672:nk]' direction='DESC' using='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574288113666:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574288113666:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574288113666:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Calculation_770115574297329672:nk]</cols>
      </table>
      <simple-id uuid='{CB80AC14-C837-42B2-892B-0DC5282D49C5}' />
    </worksheet>
    <worksheet name='Translators per city size per group'>
      <table>
        <view>
          <datasources>
            <datasource caption='Population+ (Lista_tp)' name='federated.0eyakcf1q8altw176syvh1x5d1z6' />
          </datasources>
          <datasource-dependencies datasource='federated.0eyakcf1q8altw176syvh1x5d1z6'>
            <column caption='City size' datatype='string' name='[Calculation_715227954017333248]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Population] &gt; 250000 THEN &apos;Large city &gt; 250k&apos; &#13;&#10;ELSEIF [Population] &gt; 50000 AND [Population] &lt;= 250000 THEN &apos;Middle-size city 50k-250k&apos;&#13;&#10;ELSE &apos;Small city &lt;50k&apos; END' />
            </column>
            <column caption='Translator distinct' datatype='integer' name='[Calculation_770115574288113666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Name])' />
            </column>
            <column datatype='integer' name='[Group]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_715227954017333248]' derivation='None' name='[none:Calculation_715227954017333248:nk]' pivot='key' type='nominal' />
            <column-instance column='[Group]' derivation='None' name='[none:Group:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_770115574288113666]' derivation='User' name='[usr:Calculation_770115574288113666:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Group:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Group:ok]' />
              <groupfilter function='member' level='[none:Group:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Group:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574288113666:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Group:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Calculation_715227954017333248:nk] / [federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Group:ok])</rows>
        <cols>[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574288113666:qk]</cols>
        <subtotals>
          <column>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Calculation_715227954017333248:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{BB85C737-3C94-4FCD-A629-24F61EC90163}' />
    </worksheet>
    <worksheet name='Translators per group'>
      <table>
        <view>
          <datasources>
            <datasource caption='Population+ (Lista_tp)' name='federated.0eyakcf1q8altw176syvh1x5d1z6' />
          </datasources>
          <datasource-dependencies datasource='federated.0eyakcf1q8altw176syvh1x5d1z6'>
            <column caption='Translator distinct' datatype='integer' name='[Calculation_770115574288113666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Name])' />
            </column>
            <column datatype='integer' name='[Group]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column-instance column='[Group]' derivation='None' name='[none:Group:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_770115574288113666]' derivation='User' name='[pcto:usr:Calculation_770115574288113666:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Group:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Group:ok]' />
              <groupfilter function='member' level='[none:Group:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Group:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0eyakcf1q8altw176syvh1x5d1z6].[pcto:usr:Calculation_770115574288113666:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Group:ok]</rows>
        <cols />
        <percentages enabled='true' mode='column' />
      </table>
      <simple-id uuid='{10DFAD5E-DE47-4F73-BA45-0B5E863129DC}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Top 20 languages in Poland'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Calculation_770115574288359428:nk]</field>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Calculation_770115574288498693:nk]</field>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Language:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DD82F7B7-5EAB-4A0B-AC18-28B1D4C260D1}' />
    </window>
    <window class='worksheet' name='Translators abroad'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574288113666:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574288113666:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574288113666:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{331C14B6-FF01-4B0D-9F95-B1DB341BDF2C}' />
    </window>
    <window class='worksheet' name='Licenses granted per year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[tyr:Year:ok]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Group:ok]</field>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Year:qk]</field>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[tyr:Year:ok]</field>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[tyr:Year:qk]</field>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E9B735B3-4697-46CD-ACE5-AA5ED7FA3263}' />
    </window>
    <window class='worksheet' name='Licenses granted per year per group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='116'>
            <card pane-specification-id='0' param='[federated.0eyakcf1q8altw176syvh1x5d1z6].[pcto:usr:Calculation_770115574288113666:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[tyr:Year:ok]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Group:ok]</field>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[tyr:Year:ok]</field>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[tyr:Year:qk]</field>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CAA037B-AC08-4A1C-9CFB-D36491AB0B24}' />
    </window>
    <window class='worksheet' name='Four and more languages per year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Calculation_770115574297329672:nk]</field>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Id:ok]</field>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Language:nk]</field>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[tyr:Year:ok]</field>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[tyr:Year:qk]</field>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574296580103:nk]</field>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574302244874:ok:2]</field>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574302244874:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A5F9D9FE-89C9-4927-8116-0EEFFBAD4E6B}' />
    </window>
    <window class='worksheet' name='Translators and number of languages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Calculation_770115574297329672:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2A171AC4-272C-444D-B958-0A621A076F60}' />
    </window>
    <window class='worksheet' name='Translators per city size per group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Group:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Group:ok]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Calculation_715227954017333248:nk]</field>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:City (Translators):nk]</field>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Group:ok]</field>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_715227954017333248:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D881933C-42E3-4BB5-8909-1322392B348F}' />
    </window>
    <window class='worksheet' name='Number of translators per population (per mille)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Calculation_770115574288203779:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Voivodeship:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E721CF72-643B-4687-ACDA-0085C4246C8B}' />
    </window>
    <window class='worksheet' name='Translators per group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Group:ok]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Group:ok]</field>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Voivodeship:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AF5F0D10-DBCF-4801-84F5-E8E09A2F9CC4}' />
    </window>
    <window class='worksheet' maximized='true' name='Number of translators per population (per mille) (index)'>
      <cards>
        <edge name='left'>
          <strip size='167'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0eyakcf1q8altw176syvh1x5d1z6].[usr:Population per Translators (copy):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eyakcf1q8altw176syvh1x5d1z6].[none:Voivodeship:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E75698DA-09D3-4ABA-A2F9-A91D7599674E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Four and more languages per year' width='192'>
      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
      mt6fFWW4/w9t84zOea+cqQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Licenses granted per year' width='192'>
      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
    </thumbnail>
    <thumbnail height='124' name='Licenses granted per year per group' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of translators per population (per mille)' width='192'>
      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
      hFNRGwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Number of translators per population (per mille) (index)' width='192'>
      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
      zMdGy8zF/wJrOaGa3ZOsJAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 20 languages in Poland' width='192'>
      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
      8weMAmtLYg5fWAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Translators abroad' width='192'>
      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
    </thumbnail>
    <thumbnail height='44' name='Translators and number of languages' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Translators per city size per group' width='192'>
      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
      av8fFyS6r3V55c4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='104' name='Translators per group' width='144'>
      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
      zZv30M8lAvQXZDAY6N2795OxJ1oESGiL2FQvyCL2AwmyiAAJsogACbKIAAmyyAiQieLVcbwV
      /ir+/v68Gv4W/9JVcqP91iZ0ADICZKReOZ6P8vWUlv5A0fpR/LYmnk/L2m9xwpNPRoBeYtzM
      UJ53fRrohNJ3KGF9LvH7f9ptbcI9NDQ0MHr0aFv53uTk5Dv20+v1DBkyxNZPrVZz9erVe7Y9
      sjK/Tf85I+3591vSa1NypHM322NG4X7Mnj1bGjNmjGQymaSioiIpODhY2rt3r12fmpoaKTQ0
      VEpLS5PMZrNUVVUlDR8+XFq2bFmbbfdb5ldekc1WZe7+FvAea9Im0F+U7XwkLl++zKlTp1iz
      Zg09e/bk9ddfJyQkBJ1OR0REhK1fz5492b17N87OzkBL8cxRo0ZRXV3dZlvrMr+enp5otVpq
      a2tJT09vxzK/fWPILS3lh+JC1kb+ykej30X7c7OsKYX709TUxNNPP423t7ftWEREBA0N9t/M
      c3BwsAUE4Oeff2bXrl1ERka22fZIy/x2Unbl+eHJxH/vT2aJgZj+fe89SJDlypUrODo6olT+
      8d2Yp556irq6ujv2t1qtaDQatFrtbaWA79b2cMv8luWTWXKW+saWK84NUyFFPzyFR+8eDzyl
      cP+6dOmCxWKxe9h98+ZNevS4/d/fYrEQHx/P7t27KSgosAtPW233U+b3wQPk1pXGL5bwzhst
      vwgk7J1Mrk3IZMkbLvceK8jm5OTEjRs3qKystB0rKirC1dX1tr7Jycl06tSJL7744rbCmm21
      3XKrzO/8+fO5ePGiXZnfdnkXJjwe9/MurK6uTho+fLjtXdP9trWWmpoqpaSkSJIkSVqtVho1
      apRkNpul2bNnS2I7RwfW0NDA+PHjqa2tRaFQoFar+eCDDwBsZX7LyspITEzkz//Nffr0IT4+
      /q5tt0r9ijK//4VEmV9BFlHmV+gwRJlfQRaxH0iQRQRIkEUESJBFBEiQRQRIkKVdAnQh992W
      8i6pB9tjOqEDkR+gxiI2aN2ZOunv7bAcoaORGSALFZ9nczFmOsPEQ/hHrr6+npSUFCIiIpg0
      adId+5jNZqZOnUpYWBgqlYqwsDBmzJhh+83OGzZssCsQplKp0Gg0ACxdupSwsDCGDh3Kli1b
      bHOuX7/e9pue5QXI9A0ZBf7EidKsj8XcuXMxGAzMmjXrjlVcoaWOYq9evcjIyKC4uJgNGzZQ
      VVVFZmYmAGfOnCE8PNxWKq+4uJjY2FgMBoOtzG9CQgJ5eXlYLBbq6uooKSlhyZIlgKwdiY0c
      3KCB2M8Y7AiisN2jl5ubC7QUHL+bW6V8b2ldyhegrq6O0NDQ28a1LvPr4eFBXl4eJpOJrKys
      9inza6n4nE+PhhMzpteDTiE8Yn8u5Xvz5k2uXr16W71E4OGX+T2ar6P68k3mhW9rdXQxqp9n
      8nn2RMSL2pPjbqV8b22Uv1XJTKFQ4Ofnx9q1a/Hw8LivMr/tVmDqQu67TDo/jeKkIfL/xsL/
      y/79+8nNzSUrK6vNfg0NDezatYtNmzaxaNEiwsLCbG1Wq5XS0lJSUlIYOnQoiYmJdmP1ej2F
      hYUMHDiQbdu2kZuby+LFi8UHif9N2irl6+DgQGBgIGq1mhMnTti1tVXmt90C1Gditrj6PIF2
      7tzJsmXLqK6uBrCV8u3WrRt6vZ6oqCjKyloKGvz0009s3bqV4OBguzn+XOb39OnTosxvR3ft
      2jXUajVms9nuuKOjI3l5ecTExKDT6TAYDHct5du5c2dWrlzJt99+i9VqRaFQEBQUxPLly227
      Ge9V5vf/AOpemiqlgmBWAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
